{"version":3,"file":"static/js/482.1e163aaa.chunk.js","mappings":"mQAWaA,EAAY,WACvB,IAAMC,GAAWC,EAAAA,EAAAA,MAaXC,EAAeC,EAAAA,KAAaC,MAAM,CACtCC,MAAOF,EAAAA,KACJE,QACAC,IAAI,EAAG,cACPC,IAAI,GAAI,aACRC,SAAS,YACZC,SAAUN,EAAAA,KACPG,IAAI,EAAG,cACPC,IAAI,GAAI,aACRC,SAAS,cAGd,OACEE,EAAAA,EAAAA,KAACC,EAAAA,GAAM,CACLC,cAAe,CACbP,MAAO,GACPI,SAAU,IAEZI,iBAAkBX,EAClBY,SA9BiB,SAACC,EAAKC,GAAqB,IAAjBC,EAASD,EAATC,UACrBZ,EAAoBU,EAApBV,MAAOI,EAAaM,EAAbN,SACfT,GACEkB,EAAAA,EAAAA,IAAU,CACRb,MAAOA,EACPI,SAAUA,KAGdQ,GACF,EAqB2BE,UAEvBC,EAAAA,EAAAA,MAACC,EAAAA,GAAgB,CAAAF,SAAA,EACfC,EAAAA,EAAAA,MAACE,EAAAA,GAAQ,CAAAH,SAAA,EACPT,EAAAA,EAAAA,KAACa,EAAAA,GAAa,CACZC,KAAK,QACLC,KAAK,QACLC,YAAY,sBAEdhB,EAAAA,EAAAA,KAACiB,EAAAA,GAAY,CAACC,UAAWC,EAAAA,GAAYJ,KAAK,cAE5CL,EAAAA,EAAAA,MAACE,EAAAA,GAAQ,CAAAH,SAAA,EACPT,EAAAA,EAAAA,KAACa,EAAAA,GAAa,CACZC,KAAK,WACLC,KAAK,WACLC,YAAY,yBAEdhB,EAAAA,EAAAA,KAACiB,EAAAA,GAAY,CAACC,UAAWC,EAAAA,GAAYJ,KAAK,iBAE5Cf,EAAAA,EAAAA,KAAA,UAAQc,KAAK,SAAQL,SAAC,cAI9B,EChEe,SAASW,IACtB,OACEV,EAAAA,EAAAA,MAAA,OAAKW,MAAO,CAAEC,MAAO,IAAKC,WAAY,OAAQC,YAAa,QAASf,SAAA,EAClET,EAAAA,EAAAA,KAACyB,EAAAA,EAAM,CAAAhB,UACLT,EAAAA,EAAAA,KAAA,SAAAS,SAAO,aAETT,EAAAA,EAAAA,KAACX,EAAS,MAGhB,C","sources":["components/LoginForm/LoginForm.js","pages/LoginPage.js"],"sourcesContent":["import { useDispatch } from 'react-redux';\nimport { ErrorMessage, Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { loginUser } from 'redux/user/authOperations';\nimport {\n  ErrorField,\n  FieldInputCSS,\n  FormContainerCSS,\n  LabelDiv,\n} from 'components/MainContainerCSS';\n\nexport const LoginForm = () => {\n  const dispatch = useDispatch();\n\n  const handleSubmit = (value, { resetForm }) => {\n    const { email, password } = value;\n    dispatch(\n      loginUser({\n        email: email,\n        password: password,\n      })\n    );\n    resetForm();\n  };\n\n  const SignupSchema = Yup.object().shape({\n    email: Yup.string()\n      .email()\n      .min(3, 'Too Short!')\n      .max(30, 'Too Long!')\n      .required('Required'),\n    password: Yup.string()\n      .min(5, 'Too Short!')\n      .max(15, 'Too Long!')\n      .required('Required'),\n  });\n\n  return (\n    <Formik\n      initialValues={{\n        email: '',\n        password: '',\n      }}\n      validationSchema={SignupSchema}\n      onSubmit={handleSubmit}\n    >\n      <FormContainerCSS>\n        <LabelDiv>\n          <FieldInputCSS\n            type=\"email\"\n            name=\"email\"\n            placeholder=\"Input your Email\"\n          />\n          <ErrorMessage component={ErrorField} name=\"email\" />\n        </LabelDiv>\n        <LabelDiv>\n          <FieldInputCSS\n            type=\"password\"\n            name=\"password\"\n            placeholder=\"Input your Password\"\n          />\n          <ErrorMessage component={ErrorField} name=\"password\" />\n        </LabelDiv>\n        <button type=\"submit\">LogIn</button>\n      </FormContainerCSS>\n    </Formik>\n  );\n};\n","import { Helmet } from 'react-helmet';\nimport { LoginForm } from 'components/LoginForm/LoginForm';\n\nexport default function LoginPage() {\n  return (\n    <div style={{ width: 350, marginLeft: 'auto', marginRight: 'auto' }}>\n      <Helmet>\n        <title>Login</title>\n      </Helmet>\n      <LoginForm />\n    </div>\n  );\n}\n"],"names":["LoginForm","dispatch","useDispatch","SignupSchema","Yup","shape","email","min","max","required","password","_jsx","Formik","initialValues","validationSchema","onSubmit","value","_ref","resetForm","loginUser","children","_jsxs","FormContainerCSS","LabelDiv","FieldInputCSS","type","name","placeholder","ErrorMessage","component","ErrorField","LoginPage","style","width","marginLeft","marginRight","Helmet"],"sourceRoot":""}