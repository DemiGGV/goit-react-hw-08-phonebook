{"version":3,"file":"static/js/520.5078764d.chunk.js","mappings":"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","sources":["../node_modules/reselect/es/defaultMemoize.js","../node_modules/reselect/es/index.js","redux/contacts/selectors.js","components/Form/Form.js","components/Filter/Filter.js","components/ContactsList/ContactsListStyled.js","components/ContactsList/ContactsList.js","pages/ContactsPage.js","../node_modules/react-scroll-to-top/node_modules/style-inject/dist/style-inject.es.js","../node_modules/react-scroll-to-top/src/index.tsx"],"sourcesContent":["// Cache implementation based on Erik Rasmussen's `lru-memoize`:\n// https://github.com/erikras/lru-memoize\nvar NOT_FOUND = 'NOT_FOUND';\n\nfunction createSingletonCache(equals) {\n  var entry;\n  return {\n    get: function get(key) {\n      if (entry && equals(entry.key, key)) {\n        return entry.value;\n      }\n\n      return NOT_FOUND;\n    },\n    put: function put(key, value) {\n      entry = {\n        key: key,\n        value: value\n      };\n    },\n    getEntries: function getEntries() {\n      return entry ? [entry] : [];\n    },\n    clear: function clear() {\n      entry = undefined;\n    }\n  };\n}\n\nfunction createLruCache(maxSize, equals) {\n  var entries = [];\n\n  function get(key) {\n    var cacheIndex = entries.findIndex(function (entry) {\n      return equals(key, entry.key);\n    }); // We found a cached entry\n\n    if (cacheIndex > -1) {\n      var entry = entries[cacheIndex]; // Cached entry not at top of cache, move it to the top\n\n      if (cacheIndex > 0) {\n        entries.splice(cacheIndex, 1);\n        entries.unshift(entry);\n      }\n\n      return entry.value;\n    } // No entry found in cache, return sentinel\n\n\n    return NOT_FOUND;\n  }\n\n  function put(key, value) {\n    if (get(key) === NOT_FOUND) {\n      // TODO Is unshift slow?\n      entries.unshift({\n        key: key,\n        value: value\n      });\n\n      if (entries.length > maxSize) {\n        entries.pop();\n      }\n    }\n  }\n\n  function getEntries() {\n    return entries;\n  }\n\n  function clear() {\n    entries = [];\n  }\n\n  return {\n    get: get,\n    put: put,\n    getEntries: getEntries,\n    clear: clear\n  };\n}\n\nexport var defaultEqualityCheck = function defaultEqualityCheck(a, b) {\n  return a === b;\n};\nexport function createCacheKeyComparator(equalityCheck) {\n  return function areArgumentsShallowlyEqual(prev, next) {\n    if (prev === null || next === null || prev.length !== next.length) {\n      return false;\n    } // Do this in a for loop (and not a `forEach` or an `every`) so we can determine equality as fast as possible.\n\n\n    var length = prev.length;\n\n    for (var i = 0; i < length; i++) {\n      if (!equalityCheck(prev[i], next[i])) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n}\n// defaultMemoize now supports a configurable cache size with LRU behavior,\n// and optional comparison of the result value with existing values\nexport function defaultMemoize(func, equalityCheckOrOptions) {\n  var providedOptions = typeof equalityCheckOrOptions === 'object' ? equalityCheckOrOptions : {\n    equalityCheck: equalityCheckOrOptions\n  };\n  var _providedOptions$equa = providedOptions.equalityCheck,\n      equalityCheck = _providedOptions$equa === void 0 ? defaultEqualityCheck : _providedOptions$equa,\n      _providedOptions$maxS = providedOptions.maxSize,\n      maxSize = _providedOptions$maxS === void 0 ? 1 : _providedOptions$maxS,\n      resultEqualityCheck = providedOptions.resultEqualityCheck;\n  var comparator = createCacheKeyComparator(equalityCheck);\n  var cache = maxSize === 1 ? createSingletonCache(comparator) : createLruCache(maxSize, comparator); // we reference arguments instead of spreading them for performance reasons\n\n  function memoized() {\n    var value = cache.get(arguments);\n\n    if (value === NOT_FOUND) {\n      // @ts-ignore\n      value = func.apply(null, arguments);\n\n      if (resultEqualityCheck) {\n        var entries = cache.getEntries();\n        var matchingEntry = entries.find(function (entry) {\n          return resultEqualityCheck(entry.value, value);\n        });\n\n        if (matchingEntry) {\n          value = matchingEntry.value;\n        }\n      }\n\n      cache.put(arguments, value);\n    }\n\n    return value;\n  }\n\n  memoized.clearCache = function () {\n    return cache.clear();\n  };\n\n  return memoized;\n}","import { defaultMemoize, defaultEqualityCheck } from './defaultMemoize';\nexport { defaultMemoize, defaultEqualityCheck };\n\nfunction getDependencies(funcs) {\n  var dependencies = Array.isArray(funcs[0]) ? funcs[0] : funcs;\n\n  if (!dependencies.every(function (dep) {\n    return typeof dep === 'function';\n  })) {\n    var dependencyTypes = dependencies.map(function (dep) {\n      return typeof dep === 'function' ? \"function \" + (dep.name || 'unnamed') + \"()\" : typeof dep;\n    }).join(', ');\n    throw new Error(\"createSelector expects all input-selectors to be functions, but received the following types: [\" + dependencyTypes + \"]\");\n  }\n\n  return dependencies;\n}\n\nexport function createSelectorCreator(memoize) {\n  for (var _len = arguments.length, memoizeOptionsFromArgs = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    memoizeOptionsFromArgs[_key - 1] = arguments[_key];\n  }\n\n  var createSelector = function createSelector() {\n    for (var _len2 = arguments.length, funcs = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      funcs[_key2] = arguments[_key2];\n    }\n\n    var _recomputations = 0;\n\n    var _lastResult; // Due to the intricacies of rest params, we can't do an optional arg after `...funcs`.\n    // So, start by declaring the default value here.\n    // (And yes, the words 'memoize' and 'options' appear too many times in this next sequence.)\n\n\n    var directlyPassedOptions = {\n      memoizeOptions: undefined\n    }; // Normally, the result func or \"output selector\" is the last arg\n\n    var resultFunc = funcs.pop(); // If the result func is actually an _object_, assume it's our options object\n\n    if (typeof resultFunc === 'object') {\n      directlyPassedOptions = resultFunc; // and pop the real result func off\n\n      resultFunc = funcs.pop();\n    }\n\n    if (typeof resultFunc !== 'function') {\n      throw new Error(\"createSelector expects an output function after the inputs, but received: [\" + typeof resultFunc + \"]\");\n    } // Determine which set of options we're using. Prefer options passed directly,\n    // but fall back to options given to createSelectorCreator.\n\n\n    var _directlyPassedOption = directlyPassedOptions,\n        _directlyPassedOption2 = _directlyPassedOption.memoizeOptions,\n        memoizeOptions = _directlyPassedOption2 === void 0 ? memoizeOptionsFromArgs : _directlyPassedOption2; // Simplifying assumption: it's unlikely that the first options arg of the provided memoizer\n    // is an array. In most libs I've looked at, it's an equality function or options object.\n    // Based on that, if `memoizeOptions` _is_ an array, we assume it's a full\n    // user-provided array of options. Otherwise, it must be just the _first_ arg, and so\n    // we wrap it in an array so we can apply it.\n\n    var finalMemoizeOptions = Array.isArray(memoizeOptions) ? memoizeOptions : [memoizeOptions];\n    var dependencies = getDependencies(funcs);\n    var memoizedResultFunc = memoize.apply(void 0, [function recomputationWrapper() {\n      _recomputations++; // apply arguments instead of spreading for performance.\n\n      return resultFunc.apply(null, arguments);\n    }].concat(finalMemoizeOptions)); // If a selector is called with the exact same arguments we don't need to traverse our dependencies again.\n\n    var selector = memoize(function dependenciesChecker() {\n      var params = [];\n      var length = dependencies.length;\n\n      for (var i = 0; i < length; i++) {\n        // apply arguments instead of spreading and mutate a local list of params for performance.\n        // @ts-ignore\n        params.push(dependencies[i].apply(null, arguments));\n      } // apply arguments instead of spreading for performance.\n\n\n      _lastResult = memoizedResultFunc.apply(null, params);\n      return _lastResult;\n    });\n    Object.assign(selector, {\n      resultFunc: resultFunc,\n      memoizedResultFunc: memoizedResultFunc,\n      dependencies: dependencies,\n      lastResult: function lastResult() {\n        return _lastResult;\n      },\n      recomputations: function recomputations() {\n        return _recomputations;\n      },\n      resetRecomputations: function resetRecomputations() {\n        return _recomputations = 0;\n      }\n    });\n    return selector;\n  }; // @ts-ignore\n\n\n  return createSelector;\n}\nexport var createSelector = /* #__PURE__ */createSelectorCreator(defaultMemoize);\n// Manual definition of state and output arguments\nexport var createStructuredSelector = function createStructuredSelector(selectors, selectorCreator) {\n  if (selectorCreator === void 0) {\n    selectorCreator = createSelector;\n  }\n\n  if (typeof selectors !== 'object') {\n    throw new Error('createStructuredSelector expects first argument to be an object ' + (\"where each property is a selector, instead received a \" + typeof selectors));\n  }\n\n  var objectKeys = Object.keys(selectors);\n  var resultSelector = selectorCreator( // @ts-ignore\n  objectKeys.map(function (key) {\n    return selectors[key];\n  }), function () {\n    for (var _len3 = arguments.length, values = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      values[_key3] = arguments[_key3];\n    }\n\n    return values.reduce(function (composition, value, index) {\n      composition[objectKeys[index]] = value;\n      return composition;\n    }, {});\n  });\n  return resultSelector;\n};","import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.data;\n\nexport const selectFilter = state => state.filter;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectIsDeleting = state => state.contacts.isDeleting;\n\nexport const selectError = state => state.contacts.error;\n\nexport const selectCurrentID = state => state.contacts.currentID;\n\nexport const selectVisibleContacts = createSelector(\n  [selectContacts, selectFilter],\n  (data, filter) => {\n    const tag = !!Number(filter) ? 'number' : 'name';\n    return data.filter(contact =>\n      contact[tag].toLowerCase().includes(filter.toLowerCase())\n    );\n  }\n);\n","import { useDispatch, useSelector } from 'react-redux';\nimport { ErrorMessage, Formik } from 'formik';\nimport * as Yup from 'yup';\n\nimport {\n  FormContainerCSS,\n  FieldInputCSS,\n  ErrorField,\n  LabelDiv,\n} from '../MainContainerCSS';\nimport { selectContacts } from 'redux/contacts/selectors';\nimport { addContact } from 'redux/contacts/contactsOperations';\nimport { setError } from 'redux/contacts/contactsSlice';\n\nexport const Form = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n\n  const handleSubmit = (value, { resetForm }) => {\n    const { name, number } = value;\n    if (\n      contacts.find(\n        contact => contact.name.toLowerCase() === name.trim().toLowerCase()\n      )\n    ) {\n      dispatch(setError(`${name.trim()} already in contacts!`));\n      return;\n    }\n    dispatch(\n      addContact({\n        name: name.trim(),\n        number: number.trim(),\n      })\n    );\n    resetForm();\n  };\n\n  const SignupSchema = Yup.object().shape({\n    name: Yup.string()\n      .min(3, 'Too Short!')\n      .max(30, 'Too Long!')\n      .required('Required'),\n    number: Yup.string()\n      .min(5, 'Too Short!')\n      .max(15, 'Too Long!')\n      .required('Required'),\n  });\n\n  return (\n    <Formik\n      initialValues={{\n        name: '',\n        number: '',\n      }}\n      validationSchema={SignupSchema}\n      onSubmit={handleSubmit}\n    >\n      <FormContainerCSS>\n        <LabelDiv>\n          <FieldInputCSS type=\"text\" name=\"name\" />\n          <ErrorMessage component={ErrorField} name=\"name\" />\n        </LabelDiv>\n        <LabelDiv>\n          <FieldInputCSS type=\"tel\" name=\"number\" />\n          <ErrorMessage component={ErrorField} name=\"number\" />\n        </LabelDiv>\n        <button type=\"submit\">Add contact</button>\n      </FormContainerCSS>\n    </Formik>\n  );\n};\n","import { useDispatch, useSelector } from 'react-redux';\nimport { setFilter } from 'redux/contacts/filterSlice';\nimport { selectContacts, selectFilter } from 'redux/contacts/selectors';\nimport { FormInputCSS } from 'components/MainContainerCSS';\n\nexport const Filter = () => {\n  const filter = useSelector(selectFilter);\n  const contacts = useSelector(selectContacts);\n  const dispatch = useDispatch();\n\n  const handleChange = evt => {\n    evt.preventDefault();\n    dispatch(setFilter(evt.target.value.trim()));\n  };\n\n  return (\n    <label>\n      Filtering contacts by: name/number...\n      <FormInputCSS\n        type=\"text\"\n        name=\"filter\"\n        title=\"Search\"\n        required\n        disabled={!contacts.length}\n        value={filter}\n        onChange={handleChange}\n      />\n    </label>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const List = styled.ul`\n  min-width: 350px;\n  width: 100%;\n`;\n\nexport const LiItem = styled.li`\n  margin-bottom: 5px;\n  margin-left: auto;\n  margin-right: auto;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  gap: 15px;\n  max-width: 450px;\n  width: 100%;\n  @media screen and (max-width: 650px) {\n    max-width: 350px;\n    padding: 0 20px;\n  }\n`;\n\nexport const LiSpan = styled.span`\n  text-shadow: #fc0 1px 0 10px;\n  margin-left: auto;\n`;\n\nexport const LiButton = styled.button`\n  background-color: #ffffff;\n  border: 1px solid #cccccc;\n  box-shadow: 0 1px 1px rgba(0, 0, 0, 0.075) inset;\n  transition: border 0.2s linear 0s, box-shadow 0.2s linear 0s;\n  border-radius: 4px;\n  font-size: 14px;\n  padding: 4px 6px;\n  text-decoration: none;\n  cursor: pointer;\n  min-width: 120px;\n  &:hover {\n    border-color: rgba(82, 168, 236, 0.8);\n    box-shadow: 0 1px 1px rgba(0, 0, 0, 0.075) inset,\n      0 0 8px rgba(82, 168, 236, 0.6);\n    outline: 0 none;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/contactsOperations';\nimport { selectCurrentID, selectIsDeleting } from 'redux/contacts/selectors';\nimport { setCurrentID } from 'redux/contacts/contactsSlice';\nimport { LiButton, LiItem, LiSpan, List } from './ContactsListStyled';\n\nexport const ContactsList = ({ contacts }) => {\n  const dispatch = useDispatch();\n  const isDeleting = useSelector(selectIsDeleting);\n  const currentID = useSelector(selectCurrentID);\n  const handleClick = evt => {\n    const currentID = evt.target.dataset.id;\n    dispatch(setCurrentID(currentID));\n    dispatch(deleteContact(currentID));\n  };\n\n  return (\n    <List>\n      {contacts.map(contact => (\n        <LiItem key={contact.id}>\n          {contact.name}: <LiSpan>{contact.number}</LiSpan>\n          <LiButton\n            type=\"button\"\n            disabled={isDeleting && currentID === contact.id}\n            data-id={contact.id}\n            onClick={handleClick}\n          >\n            Delete\n          </LiButton>\n        </LiItem>\n      ))}\n    </List>\n  );\n};\n\nContactsList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      createdAt: PropTypes.string,\n      name: PropTypes.string,\n      number: PropTypes.string,\n      id: PropTypes.string,\n    })\n  ),\n};\n","import { useDispatch, useSelector } from 'react-redux';\nimport { useEffect } from 'react';\nimport ScrollToTop from 'react-scroll-to-top';\nimport { toast } from 'react-toastify';\nimport { toastOpts } from 'components/Layout';\nimport { Title, ContainerCSS } from '../components/MainContainerCSS';\nimport {\n  selectError,\n  selectIsLoading,\n  selectVisibleContacts,\n} from 'redux/contacts/selectors';\nimport { fetchContacts } from 'redux/contacts/contactsOperations';\nimport { Loader } from 'components/Loader/Loader';\nimport { Form } from 'components/Form/Form';\nimport { Filter } from 'components/Filter/Filter';\nimport { ContactsList } from 'components/ContactsList/ContactsList';\nimport { Helmet } from 'react-helmet';\n\nexport default function ContactsPage() {\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n  const dispatch = useDispatch();\n  const selectedContacts = useSelector(selectVisibleContacts);\n\n  useEffect(() => {\n    if (!!error) {\n      toast.error(error, toastOpts);\n    }\n    dispatch(fetchContacts());\n  }, [dispatch, error]);\n\n  return (\n    <ContainerCSS>\n      <Helmet>\n        <title>Phone book</title>\n      </Helmet>\n      <ScrollToTop\n        smooth\n        top={100}\n        component={<p style={{ color: 'blue' }}>UP</p>}\n      />\n      <Title>Adding new contact</Title>\n      <Form />\n      <Title>Contacts</Title>\n      <Filter />\n      {isLoading && <Loader />}\n      {!!selectedContacts.length && (\n        <ContactsList contacts={selectedContacts} />\n      )}\n    </ContainerCSS>\n  );\n}\n","function styleInject(css, ref) {\n  if ( ref === void 0 ) ref = {};\n  var insertAt = ref.insertAt;\n\n  if (!css || typeof document === 'undefined') { return; }\n\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n\n  if (insertAt === 'top') {\n    if (head.firstChild) {\n      head.insertBefore(style, head.firstChild);\n    } else {\n      head.appendChild(style);\n    }\n  } else {\n    head.appendChild(style);\n  }\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nexport default styleInject;\n","import React, { useState, useEffect } from \"react\";\n\nimport \"./styles.css\";\n\ntype Props = React.ComponentPropsWithoutRef<\"button\"> & {\n  top?: number;\n  smooth?: boolean;\n  svgPath?: string;\n  viewBox?: string;\n  component?: any;\n  width?: string;\n  height?: string;\n};\n\nfunction scrollToTop(smooth: boolean = false) {\n  if (smooth) {\n    window.scrollTo({\n      top: 0,\n      behavior: \"smooth\",\n    });\n  } else {\n    document.documentElement.scrollTop = 0;\n  }\n}\n\nconst ScrollToTop = ({\n  top = 20,\n  className = \"\",\n  color = \"black\",\n  smooth = false,\n  component = \"\",\n  viewBox = \"0 0 256 256\",\n  svgPath = \"M222.138,91.475l-89.6-89.6c-2.5-2.5-6.551-2.5-9.051,0l-89.6,89.6c-2.5,2.5-2.5,6.551,0,9.051s6.744,2.5,9.244,0L122,21.85  V249.6c0,3.535,2.466,6.4,6,6.4s6-2.865,6-6.4V21.85l78.881,78.676c1.25,1.25,2.992,1.875,4.629,1.875s3.326-0.625,4.576-1.875  C224.586,98.025,224.638,93.975,222.138,91.475z\",\n  width = \"28\",\n  height = \"28\",\n  ...props\n}: Props) => {\n  const [visible, setVisible] = useState(false);\n\n  useEffect(() => {\n    const onScroll = () => {\n      setVisible(document.documentElement.scrollTop >= top);\n    };\n    onScroll();\n    document.addEventListener(\"scroll\", onScroll);\n    return () => document.removeEventListener(\"scroll\", onScroll);\n  }, [top]);\n\n  return (\n    <>\n      {visible && (\n        <button\n          className={`scroll-to-top ${className}`}\n          onClick={() => scrollToTop(smooth)}\n          aria-label=\"Scroll to top\"\n          // eslint-disable-next-line react/jsx-props-no-spreading\n          {...props}\n        >\n          {component || (\n            <svg width={width} height={height} fill={color} viewBox={viewBox}>\n              <path d={svgPath} />\n            </svg>\n          )}\n        </button>\n      )}\n    </>\n  );\n};\n\nexport default ScrollToTop;\n"],"names":["NOT_FOUND","defaultEqualityCheck","a","b","defaultMemoize","func","equalityCheckOrOptions","providedOptions","equalityCheck","_providedOptions$equa","_providedOptions$maxS","maxSize","resultEqualityCheck","comparator","prev","next","length","i","createCacheKeyComparator","cache","equals","entry","get","key","value","put","getEntries","clear","undefined","createSingletonCache","entries","cacheIndex","findIndex","splice","unshift","pop","createLruCache","memoized","arguments","apply","matchingEntry","find","clearCache","getDependencies","funcs","dependencies","Array","isArray","every","dep","dependencyTypes","map","name","join","Error","createSelectorCreator","memoize","_len","memoizeOptionsFromArgs","_key","createSelector","_len2","_key2","_lastResult","_recomputations","directlyPassedOptions","memoizeOptions","resultFunc","_directlyPassedOption","_directlyPassedOption2","finalMemoizeOptions","memoizedResultFunc","concat","selector","params","push","Object","assign","lastResult","recomputations","resetRecomputations","selectContacts","state","contacts","data","selectFilter","filter","selectIsLoading","isLoading","selectIsDeleting","isDeleting","selectError","error","selectCurrentID","currentID","selectVisibleContacts","tag","Number","contact","toLowerCase","includes","Form","dispatch","useDispatch","useSelector","SignupSchema","Yup","shape","min","max","required","number","_jsx","Formik","initialValues","validationSchema","onSubmit","_ref","resetForm","trim","setError","addContact","children","_jsxs","FormContainerCSS","LabelDiv","FieldInputCSS","type","ErrorMessage","component","ErrorField","Filter","FormInputCSS","title","disabled","onChange","evt","preventDefault","setFilter","target","List","styled","_templateObject","_taggedTemplateLiteral","LiItem","_templateObject2","LiSpan","_templateObject3","LiButton","_templateObject4","ContactsList","handleClick","dataset","id","setCurrentID","deleteContact","onClick","ContactsPage","selectedContacts","useEffect","toast","toastOpts","fetchContacts","ContainerCSS","Helmet","ScrollToTop","smooth","top","style","color","Title","Loader","css","ref","insertAt","document","head","getElementsByTagName","createElement","firstChild","insertBefore","appendChild","styleSheet","cssText","createTextNode","_a","_b","_c","className","_d","_e","_f","_g","viewBox","_h","svgPath","_j","width","_k","height","props","__rest","_l","React","useState","visible","setVisible","onScroll","documentElement","scrollTop","addEventListener","removeEventListener","React__default","Fragment","__assign","window","scrollTo","behavior","scrollToTop","fill","d"],"sourceRoot":""}